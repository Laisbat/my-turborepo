name: Release

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  # bundle-size:
  #   name: Bundle Size
  #   runs-on: ubuntu-latest
  #   if: github.event_name == 'pull_request'
  #   steps:
  #     - name: Checkout Repo
  #       uses: actions/checkout@v4

  #     - name: Setup Node.js
  #       uses: actions/setup-node@v4
  #       with:
  #         node-version: 20

  #     - name: Install Dependencies
  #       run: npm ci

  #     - name: Run Size Limit
  #       uses: andresz1/size-limit-action@v1
  #       with:
  #         github_token: ${{ secrets.GITHUB_TOKEN }}

  release:
    name: Release
    runs-on: ubuntu-latest
    if: github.event_name == 'push'
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Setup Node.js 20.x
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Install Dependencies
        run: npm ci --workspace apps/docs || echo "Skipping apps/docs installation"

      - name: Build UI Workspace
        run: npm run build --workspace @repo/ui

      - name: Run Unit Tests
        run: npm test

        # - name: Create Release Pull Request or Publish to npm
        #   id: changesets
        #   uses: changesets/action@v1
        #   with:
        #     publish: npm run release
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      # - name: Send a Slack notification if a publish happens
      #   if: steps.changesets.outputs.published == 'true'
      #   run: my-slack-bot send-notification --message "A new version of ${GITHUB_REPOSITORY} was published!"
